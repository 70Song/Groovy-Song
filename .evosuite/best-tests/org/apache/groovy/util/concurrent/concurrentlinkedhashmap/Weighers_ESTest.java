/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 21 06:24:26 GMT 2020
 */

package org.apache.groovy.util.concurrent.concurrentlinkedhashmap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.BatchUpdateException;
import java.sql.ClientInfoStatus;
import java.sql.DataTruncation;
import java.sql.SQLClientInfoException;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.util.Collection;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import org.apache.groovy.util.concurrent.concurrentlinkedhashmap.EntryWeigher;
import org.apache.groovy.util.concurrent.concurrentlinkedhashmap.Weigher;
import org.apache.groovy.util.concurrent.concurrentlinkedhashmap.Weighers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Weighers_ESTest extends Weighers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Weighers.ByteArrayWeigher weighers_ByteArrayWeigher0 = Weighers.ByteArrayWeigher.INSTANCE;
      byte[] byteArray0 = new byte[5];
      int int0 = weighers_ByteArrayWeigher0.weightOf(byteArray0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Weighers.SingletonWeigher weighers_SingletonWeigher0 = Weighers.SingletonWeigher.INSTANCE;
      Integer integer0 = new Integer(1);
      int int0 = weighers_SingletonWeigher0.weightOf(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Weighers.asEntryWeigher((Weigher<? super SQLException>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.groovy.util.concurrent.concurrentlinkedhashmap.ConcurrentLinkedHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntryWeigher<EnumSet<Weighers.SingletonEntryWeigher>, DataTruncation> entryWeigher0 = Weighers.entrySingleton();
      assertNotNull(entryWeigher0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Weighers.IterableWeigher weighers_IterableWeigher0 = Weighers.IterableWeigher.INSTANCE;
      HashSet<SQLDataException> hashSet0 = new HashSet<SQLDataException>(2352);
      int int0 = weighers_IterableWeigher0.weightOf((Iterable<?>) hashSet0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("org.apache.groovy.util.concurrent.concurrentlinkedhashmap.Weighers$CollectionWeigher");
      Weighers.IterableWeigher weighers_IterableWeigher0 = Weighers.IterableWeigher.INSTANCE;
      int int0 = weighers_IterableWeigher0.weightOf((Iterable<?>) sQLIntegrityConstraintViolationException0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Weighers.MapWeigher weighers_MapWeigher0 = Weighers.MapWeigher.INSTANCE;
      HashMap<SQLInvalidAuthorizationSpecException, SQLClientInfoException> hashMap0 = new HashMap<SQLInvalidAuthorizationSpecException, SQLClientInfoException>();
      int int0 = weighers_MapWeigher0.weightOf((Map<?, ?>) hashMap0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Weighers.ListWeigher weighers_ListWeigher0 = Weighers.ListWeigher.INSTANCE;
      Stack<DataTruncation> stack0 = new Stack<DataTruncation>();
      int int0 = weighers_ListWeigher0.weightOf((List<?>) stack0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Weigher<String> weigher0 = Weighers.singleton();
      EntryWeigher<LinkedHashSet<SQLClientInfoException>, String> entryWeigher0 = Weighers.asEntryWeigher((Weigher<? super String>) weigher0);
      assertNotNull(entryWeigher0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Weigher<? super Set<SQLTransientConnectionException>> weigher0 = Weighers.set();
      assertNotNull(weigher0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Weigher<? super Map<SQLIntegrityConstraintViolationException, ClientInfoStatus>> weigher0 = Weighers.map();
      Weighers.SingletonEntryWeigher weighers_SingletonEntryWeigher0 = Weighers.SingletonEntryWeigher.INSTANCE;
      int[] intArray0 = new int[0];
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("", "", (-3465), intArray0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("", "org.apache.groovy.util.concurrent.concurrentlinkedhashmap.Weighers$SingletonWeigher", batchUpdateException0);
      int int0 = weighers_SingletonEntryWeigher0.weightOf(weigher0, sQLTransactionRollbackException0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Weigher<byte[]> weigher0 = Weighers.byteArray();
      assertNotNull(weigher0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TreeSet<Weighers.SingletonEntryWeigher> treeSet0 = new TreeSet<Weighers.SingletonEntryWeigher>();
      Weighers.CollectionWeigher weighers_CollectionWeigher0 = Weighers.CollectionWeigher.INSTANCE;
      int int0 = weighers_CollectionWeigher0.weightOf((Collection<?>) treeSet0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Weighers.SetWeigher weighers_SetWeigher0 = Weighers.SetWeigher.INSTANCE;
      HashSet<Weighers.SingletonEntryWeigher> hashSet0 = new HashSet<Weighers.SingletonEntryWeigher>();
      int int0 = weighers_SetWeigher0.weightOf((Set<?>) hashSet0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Weighers.SingletonWeigher weighers_SingletonWeigher0 = Weighers.SingletonWeigher.INSTANCE;
      Weighers.EntryWeigherView<SQLClientInfoException, SQLTransactionRollbackException> weighers_EntryWeigherView0 = new Weighers.EntryWeigherView<SQLClientInfoException, SQLTransactionRollbackException>(weighers_SingletonWeigher0);
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("eKN^)df@7Y", (Map<String, ClientInfoStatus>) null);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("eKN^)df@7Y", "|J1S<C%");
      int int0 = weighers_EntryWeigherView0.weightOf(sQLClientInfoException0, sQLTransactionRollbackException0);
      assertEquals(1, int0);
  }
}
